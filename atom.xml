<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Verge&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://verge.ink/"/>
  <updated>2020-12-31T13:32:57.558Z</updated>
  <id>http://verge.ink/</id>
  
  <author>
    <name>JinXuyang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020Review</title>
    <link href="http://verge.ink/2020/12/26/2020Review/"/>
    <id>http://verge.ink/2020/12/26/2020Review/</id>
    <published>2020-12-26T06:59:33.973Z</published>
    <updated>2020-12-31T13:32:57.558Z</updated>
    
    <content type="html"><![CDATA[<p>2020过的很快啊，忙忙碌碌倒也还算充实，写个博客记录记录这对我来说很有意义的一年</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>这一年学了很多东西，从只会一点C，到现在转投java拥抱spring全家桶，能自己写一点东西出来，很有成就感。但其他就比较拉跨了，几乎把所有时间所有精力放在了这方面，高数大物什么的都是速成的，绩点一般。</p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>这一年完成了222次commit</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231190003.png" alt="image-20201231185955963"></p><p>前半年年时间都在学习，到了后半年，才开始慢慢自己写一些东西传到GitHub上，建了25个仓库其中自己写的感觉还有点用的就俩</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231191413.png" alt="image-20201231191413121"></p><p>yiban-auto-checkin </p><p><a href="https://github.com/Jinxuyang/yiban-auto-checkin" target="_blank" rel="noopener">https://github.com/Jinxuyang/yiban-auto-checkin</a></p><p>不是什么正经东西但是有用，收获了11个star，最顶峰的时候有1100+人使用，怂了关了</p><p>api-call-counter </p><p><a href="https://github.com/Jinxuyang/api-call-counter" target="_blank" rel="noopener">https://github.com/Jinxuyang/api-call-counter</a></p><p>这个现在就有基本的功能，用redis存储数据，只需要引入jar包配置redis，默认统计controller包下方法的调用次数，也可以通过给方法上打注解来统计指定方法，想把这个好好写写做的完善一点。</p><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>写了40篇博客，95%都是笔记没有什么深度，也就自己复习的时候可以看看</p><p>本来计划再写一篇关于Spring Security，一篇关于api-call-counter的，一拖再拖，看来得拖到明年了，属实拉跨</p><p>明年希望能写出一些有深度，有水平的博客，一周一篇，希望能坚持下去，</p><p>还有很多篇没有往博客上传，重装了一次电脑东西都搞没了hhh，也没再搞好</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231194935.png" alt="image-20201231194935707"></p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231194946.png" alt="image-20201231194946039"></p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231194954.png" alt="image-20201231194954771"></p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>唉…也就那样，和往年一样，没去什么地方玩，也没干什么有趣的事情，也还没有<strong>女朋友</strong></p><p>比较幸运，比较正确的事就是来铁头，东西也学了，饭也干了，认识了许多小伙伴，very good</p><h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p>今年最让我记忆深刻的游戏非<strong>巫师3：狂猎</strong>莫属</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231202640.png" alt="image-20201231202640482"></p><p>没有可以完成成就，没有专门收集装备，开了最低难度，就看了剧情，游戏初期感觉很拖沓，感觉很无聊，许许多多奇怪的名字</p><p>搞得人….差点错过了这部游戏，47块本体加DLC绝对物超所值</p><p>游戏的配乐也极其好听，导致</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231211651.jpg" alt="Screenshot_20201228_120305"></p><p>总之，绝对不要错过</p><p>还有两个我特别喜欢的游戏</p><p>一个是 Factorio 很好玩，很费肝</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231212126.png" alt="image-20201231212125985"></p><p>另一个是Oxygen Not Include</p><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201231202542.png" alt="image-20201231202542614"></p><p>同样值得尝试</p><h2 id="憧憬"><a href="#憧憬" class="headerlink" title="憧憬"></a>憧憬</h2><ol><li><p>代码能力更上一层楼</p><ol><li>写个 50+star 的项目？</li></ol></li><li><p>能出去走走</p><ol><li>没有什么特别想去的地方，总之不想一直待在学校了</li></ol></li><li><p>身体健康</p></li><li><p style="color:#f8f9fa">找个女朋友</p></li></ol><p>   很惨，2020快结束的时候感冒了….浑身难受</p><p>   最后，大家新年快乐！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2020过的很快啊，忙忙碌碌倒也还算充实，写个博客记录记录这对我来说很有意义的一年&lt;/p&gt;
&lt;h2 id=&quot;学习&quot;&gt;&lt;a href=&quot;#学习&quot; class=&quot;headerlink&quot; title=&quot;学习&quot;&gt;&lt;/a&gt;学习&lt;/h2&gt;&lt;p&gt;这一年学了很多东西，从只会一点C，到现在转
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ElasticSearch</title>
    <link href="http://verge.ink/2020/12/22/ElasticSearch/"/>
    <id>http://verge.ink/2020/12/22/ElasticSearch/</id>
    <published>2020-12-22T08:11:21.404Z</published>
    <updated>2020-12-24T05:39:52.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载安装">下载安装</h2><h3 id="下载（docker）">下载（docker）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch</span><br></pre></td></tr></table></figure><h3 id="配置">配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;mydata&#x2F;elasticsearch&#x2F;config</span><br><span class="line">mkdir -p &#x2F;mydata&#x2F;elasticsearch&#x2F;data</span><br><span class="line">echo &quot;http.host: 0.0.0.0&quot; &gt;&#x2F;mydata&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml</span><br><span class="line">chmod -R 777 &#x2F;mydata&#x2F;elasticsearch&#x2F;</span><br></pre></td></tr></table></figure><h3 id="启动">启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e  &quot;discovery.type&#x3D;single-node&quot; \</span><br><span class="line">-e ES_JAVA_OPTS&#x3D;&quot;-Xms64m -Xmx512m&quot; \</span><br><span class="line">-v &#x2F;mydata&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml \</span><br><span class="line">-v &#x2F;mydata&#x2F;elasticsearch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data \</span><br><span class="line">-v  &#x2F;mydata&#x2F;elasticsearch&#x2F;plugins:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins \</span><br><span class="line">-d elasticsearch:7.6.2</span><br></pre></td></tr></table></figure><h3 id="设置开机自启">设置开机自启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update elasticsearch --restart&#x3D;always</span><br></pre></td></tr></table></figure><h2 id="概念">概念</h2><p><img src="https://gitee.com/vergeee/static-repo/raw/master//img/20201222203731.png" alt="A{V60~K}ZEBX}6QLXDJB9FO"></p><ul><li><p>索引相当于数据库</p></li><li><p>类型相当于数据表(慢慢会被弃用)</p></li><li><p>文档相当于数据库的数据行</p><ul><li>字段：文档中的kv对</li><li>词：表示文本中的一个单词</li><li>标记：表示在字段中出现的词</li></ul></li></ul><h3 id="倒排索引">倒排索引</h3><h2 id="IK分词器">IK分词器</h2><p>github地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik</a></p><p>分词器版本和es版本对应</p><p>解压后放入ex的plugins目录下</p><h4 id="ik-smart">ik_smart</h4><p>最少切分</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"好好生活"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"tokens"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span> : <span class="string">"好好"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span> : <span class="string">"生活"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span> : <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ik-max-word">ik_max_word</h4><p>穷尽可能</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"好好生活"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"tokens"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span> : <span class="string">"好好"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span> : <span class="string">"好生"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span> : <span class="string">"生活"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span> : <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="增加词库">增加词库</h3><h2 id="Rest风格api">Rest风格api</h2><ul><li>GET: 获取</li><li>POST: 更新</li><li>PUT:创建</li><li>DELETE:删除</li></ul><h3 id="创建索引（PUT）">创建索引（PUT）</h3><p>发送PUT请求到</p><p><code>http://localhost:9200/&lt;index&gt;/&lt;type&gt;/&lt;id&gt;</code></p><p>例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT http://192.168.56.10:9200/movies/movie/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"The Godfather"</span>,</span><br><span class="line">    <span class="attr">"director"</span>: <span class="string">"Francis Ford Coppola"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="number">1972</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span>: <span class="string">"movies"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>: <span class="string">"movie"</span>,</span><br><span class="line">    <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"_version"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"result"</span>: <span class="string">"created"</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_seq_no"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"_primary_term"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新索引">更新索引</h3><p>使用完全相同的索引类型id，再次发送PUT请求,带上新的JSON对象</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT http://192.168.56.10:9200/movies/movie/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"The Godfather"</span>,</span><br><span class="line">    <span class="attr">"director"</span>: <span class="string">"Francis Ford Coppola"</span>,</span><br><span class="line">    <span class="attr">"year"</span>: <span class="number">1972</span>,</span><br><span class="line">    <span class="attr">"genres"</span>: [<span class="string">"Crime"</span>, <span class="string">"Drama"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span>: <span class="string">"movies"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>: <span class="string">"movie"</span>,</span><br><span class="line">    <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"_version"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"result"</span>: <span class="string">"updated"</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_seq_no"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"_primary_term"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>_version加一</p><p>reslult为update</p><h3 id="通过ID获取文档-索引">通过ID获取文档/索引</h3><p>发送GET到<code>http://localhost:9200/movies/movie/1</code></p><p>返回结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span>: <span class="string">"movies"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>: <span class="string">"movie"</span>,</span><br><span class="line">    <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"_version"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">"_seq_no"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"_primary_term"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"found"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"_source"</span>: &#123;</span><br><span class="line">        <span class="attr">"title"</span>: <span class="string">"The Godfather"</span>,</span><br><span class="line">        <span class="attr">"director"</span>: <span class="string">"Francis Ford Coppola"</span>,</span><br><span class="line">        <span class="attr">"year"</span>: <span class="number">1972</span>,</span><br><span class="line">        <span class="attr">"genres"</span>: [</span><br><span class="line">            <span class="string">"Crime"</span>,</span><br><span class="line">            <span class="string">"Drama"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除文档">删除文档</h3><p>发送DELETE到<code>http://localhost:9200/movies/movie/1</code></p><p>返回结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_index"</span>: <span class="string">"movies"</span>,</span><br><span class="line">    <span class="attr">"_type"</span>: <span class="string">"movie"</span>,</span><br><span class="line">    <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="attr">"_version"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">"result"</span>: <span class="string">"deleted"</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_seq_no"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">"_primary_term"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="核心功能：搜索">核心功能：搜索</h3><p><a href="http://localhost:9200/_search" target="_blank" rel="noopener">http://localhost:9200/_search</a></p><p><a href="http://localhost:9200/movies/_search" target="_blank" rel="noopener">http://localhost:9200/movies/_search</a> - 在电影索引中搜索所有类型</p><p><a href="http://localhost:9200/movies/movie/_search" target="_blank" rel="noopener">http://localhost:9200/movies/movie/_search</a> - 在电影索引中显式搜索电影类型的文档。</p><h4 id="搜索请求正文和DSL">搜索请求正文和DSL</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="comment">//Query DSL here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; 1</span><br><span class="line">    "bool": &#123; 2</span><br><span class="line">      "must": [</span><br><span class="line">        &#123; "match": &#123; "title":   "Search"        &#125;&#125;,</span><br><span class="line">        &#123; <span class="attr">"match"</span>: &#123; <span class="attr">"content"</span>: <span class="string">"Elasticsearch"</span> &#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      "filter": [ 3</span><br><span class="line">        &#123; "term":  &#123; "status": "published" &#125;&#125;,</span><br><span class="line">        &#123; <span class="attr">"range"</span>: &#123; <span class="attr">"publish_date"</span>: &#123; <span class="attr">"gte"</span>: <span class="string">"2015-01-01"</span> &#125;&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>query包含查询上下文</li><li>两个match被用来给每个匹配到的文档评分</li><li>filter会过滤掉不符合条件的</li></ol><h4 id="复合查询">复合查询</h4><p>符合查询包括</p><ol><li>bool query：默认</li><li>boosting query：返回文档匹配到positive，同时减少匹配到negative的文档的分数</li><li>constant_score query: 所有匹配的文档将被给予相同分数</li><li>dis_max query</li><li>function_score query</li></ol><h5 id="Boolean-query">Boolean query</h5><table><thead><tr><th><strong>Occur</strong></th><th>表头</th></tr></thead><tbody><tr><td>must</td><td>文档中必须包含，匹配到会有加分</td></tr><tr><td>filter</td><td>文档中必须包含，但不会加分</td></tr><tr><td>should</td><td>文档中应该出现</td></tr><tr><td>must_not</td><td>文档中不能出现，分数将被忽略</td></tr></tbody></table><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"bool"</span> : &#123;</span><br><span class="line">      <span class="attr">"must"</span> : &#123;</span><br><span class="line">        <span class="attr">"term"</span> : &#123; <span class="attr">"user.id"</span> : <span class="string">"kimchy"</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"filter"</span>: &#123;</span><br><span class="line">        <span class="attr">"term"</span> : &#123; <span class="attr">"tags"</span> : <span class="string">"production"</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"must_not"</span> : &#123;</span><br><span class="line">        <span class="attr">"range"</span> : &#123;</span><br><span class="line">          <span class="attr">"age"</span> : &#123; <span class="attr">"gte"</span> : <span class="number">10</span>, <span class="attr">"lte"</span> : <span class="number">20</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"should"</span> : [</span><br><span class="line">        &#123; <span class="attr">"term"</span> : &#123; <span class="attr">"tags"</span> : <span class="string">"env1"</span> &#125; &#125;,</span><br><span class="line">        &#123; <span class="attr">"term"</span> : &#123; <span class="attr">"tags"</span> : <span class="string">"deployed"</span> &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"minimum_should_match"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"boost"</span> : <span class="number">1.0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="整合Spring-Boot">整合Spring Boot</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载安装&quot;&gt;下载安装&lt;/h2&gt;
&lt;h3 id=&quot;下载（docker）&quot;&gt;下载（docker）&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="http://verge.ink/2020/12/18/Docker/"/>
    <id>http://verge.ink/2020/12/18/Docker/</id>
    <published>2020-12-18T04:36:10.167Z</published>
    <updated>2020-12-18T07:18:51.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker-安装mysql">docker 安装mysql</h2><ol><li><p><code>docker pull mysql:5.7</code> 冒号后加版本，在https://hub.docker.com/_/mysql查看</p></li><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6000:3306 --name mysql-6000 \</span><br><span class="line">-v /mydata/mysql-6000/<span class="built_in">log</span>:/var/<span class="built_in">log</span>/mysql \</span><br><span class="line">-v /mydata/mysql6000/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql6000/conf:/etc/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=JINXUyang123 \</span><br><span class="line">-d mysql:5.7</span><br></pre></td></tr></table></figure><ul><li>-p设置端口及映射端口  linux端口:docker容器端口</li><li>–name 设置容器名称</li><li>-v设置挂载</li><li>-e MYSQL_ROOT_PASSWORD=root 设置MySQL密码</li></ul></li></ol><h2 id="docker安装redis">docker安装redis</h2><ol><li><code>docker pull redis</code></li><li>启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data \</span><br><span class="line">-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \</span><br><span class="line">-d redis redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker-安装mysql&quot;&gt;docker 安装mysql&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker pull mysql:5.7&lt;/code&gt; 冒号后加版本，在https://hub.docker.com/_/mysql查看&lt;/p&gt;
&lt;/l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RocketMQ</title>
    <link href="http://verge.ink/2020/12/15/RocketMQ/"/>
    <id>http://verge.ink/2020/12/15/RocketMQ/</id>
    <published>2020-12-15T09:12:23.560Z</published>
    <updated>2020-12-15T09:58:08.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载与安装">下载与安装</h2><p>官网 <a href="http://rocketmq.apache.org/" target="_blank" rel="noopener">http://rocketmq.apache.org/</a></p><h3 id="下载-最新4-7-1">下载 (最新4.7.1)</h3><p>下载地址：<a href="https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip" target="_blank" rel="noopener">https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">mkdir rocketmq</span><br><span class="line"><span class="built_in">cd</span> rocketmq</span><br><span class="line">unzip rocketmq-all-4.7.1-bin-release.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载与安装&quot;&gt;下载与安装&lt;/h2&gt;
&lt;p&gt;官网 &lt;a href=&quot;http://rocketmq.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://rocketmq.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ActiveMQ</title>
    <link href="http://verge.ink/2020/12/15/ActiveMQ/"/>
    <id>http://verge.ink/2020/12/15/ActiveMQ/</id>
    <published>2020-12-15T06:04:47.861Z</published>
    <updated>2020-12-15T09:12:39.157Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载，安装">下载，安装</h2><p>ActiveMQ 的官网  ： <a href="http://activemq.apache.org" target="_blank" rel="noopener">http://activemq.apache.org</a></p><p>下载地址（linux）：<a href="https://mirror.bit.edu.cn/apache//activemq/5.16.0/apache-activemq-5.16.0-bin.tar.gz" target="_blank" rel="noopener">https://mirror.bit.edu.cn/apache//activemq/5.16.0/apache-activemq-5.16.0-bin.tar.gz</a></p><h3 id="安装：">安装：</h3><ol><li>解压</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-activemq-5.16.0-bin.tar.gz &#x2F;</span><br></pre></td></tr></table></figure><ol start="2"><li>启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> bin</span><br><span class="line">./activemq start</span><br><span class="line">./activemq stop</span><br><span class="line">./activemq status</span><br></pre></td></tr></table></figure><ol start="3"><li><p>控制台端口8161</p></li><li><p>61616 提供JMS服务</p></li></ol><h4 id="问题：-无法远程访问控制台">问题： 无法远程访问控制台</h4><p>修改jetty.xml</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载，安装&quot;&gt;下载，安装&lt;/h2&gt;
&lt;p&gt;ActiveMQ 的官网  ： &lt;a href=&quot;http://activemq.apache.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://activemq.apache.org&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Neo4j学习笔记</title>
    <link href="http://verge.ink/2020/11/28/Neo4j%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://verge.ink/2020/11/28/Neo4j%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-28T04:34:10.074Z</published>
    <updated>2020-11-28T04:34:10.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Neo4j学习笔记">Neo4j学习笔记</h2><h3 id="CQL语句（Cypher-Query-Language）">CQL语句（Cypher Query Language）</h3><h4 id="CREATE">CREATE</h4><ul><li>创建没有属性的节点</li><li>使用属性创建节点</li><li>在没有属性的节点之间创建关系</li><li>使用属性创建节点之间的关系</li><li>为节点或关系创建单个或多个标签</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Neo4j学习笔记&quot;&gt;Neo4j学习笔记&lt;/h2&gt;
&lt;h3 id=&quot;CQL语句（Cypher-Query-Language）&quot;&gt;CQL语句（Cypher Query Language）&lt;/h3&gt;
&lt;h4 id=&quot;CREATE&quot;&gt;CREATE&lt;/h4&gt;
&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Redis学习笔记</title>
    <link href="http://verge.ink/2020/11/11/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://verge.ink/2020/11/11/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-11T04:41:51.792Z</published>
    <updated>2020-12-14T09:02:23.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis学习笔记">Redis学习笔记</h2><p>NoSQL（Not only SQL）</p><p>泛指非关系型数据库</p><h3 id="Redis数据类型">Redis数据类型</h3><h4 id="String">String</h4><p>一个 key 对应一个 value，二进制安全，可以存放jpg图片或者序列化的对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set key value</span><br><span class="line">get key</span><br><span class="line">keys * &#x2F;&#x2F; 获取所有key</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">incr key 自增1</span><br><span class="line">decr key 自减1</span><br><span class="line">INCRBY key 10 增10</span><br><span class="line">DECRBY key 10 减10</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GETRANGE key 0 3 获取字符串的0-3</span><br><span class="line">GETRANGE key 0 -1 获取整个字符串</span><br><span class="line">SETRANGE key 1 xxxxx 替换指定开始位置字符串</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setex(set with expire)设置过期时间</span><br><span class="line">setnx(set if not exist)不存在在设置</span><br><span class="line"></span><br><span class="line">setex key 30 &quot;xxx&quot;设置字符串过期时间30s</span><br><span class="line">setnx key &quot;xxx&quot;当可以不存在时设置，否则创建失败</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mset k1 v1 k2 v2 k3 v3 一次设置多个值</span><br><span class="line">msetnx k1 v1 k2 v2 设置k1 k2时同时成功同时失败</span><br><span class="line"></span><br><span class="line">mget k1 k2 k3 一次获取多个值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set user:1 &#123;name:zhangsan,age:18&#125; 设置一个user:1 对象，值为json字符串</span><br><span class="line">mset user:1:name zhangsan user:1:age 2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getset 先get再set</span><br></pre></td></tr></table></figure><h4 id="List">List</h4><p>所有List命令都是l开头</p><p>List中的值可以重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">LPUSH list xxx 向列表头部插或多个</span><br><span class="line">RPUSH list xxx 向尾部插</span><br><span class="line">LANGE</span><br><span class="line">LPOP list移除头</span><br><span class="line">RPOP list移除尾</span><br><span class="line"></span><br><span class="line">Lindex list 1 获取第一个（通过下标获取值）</span><br><span class="line">Llen list 返回列表长度</span><br><span class="line"></span><br><span class="line">Lrem list 1 one 移除列表中的一个one</span><br><span class="line">Lrem list 2 three 移除列表中的两个three</span><br><span class="line"></span><br><span class="line">trim list 1 2修剪，只要1到2的值</span><br><span class="line"></span><br><span class="line">rpoplpush list newlist 从list pop,push到newlist</span><br><span class="line"></span><br><span class="line">lset list 0 xxx 往0处插xxx</span><br><span class="line"></span><br><span class="line">LINSERT list before &quot;xxx&quot; &quot;yyy&quot; </span><br><span class="line">LINSERT list after &quot;xxx&quot; &quot;yyy&quot;</span><br></pre></td></tr></table></figure><h4 id="Set">Set</h4><p>set中的值不可重复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sadd <span class="built_in">set</span> <span class="string">"xxx"</span></span><br><span class="line">smembers <span class="built_in">set</span> 查看所有value</span><br><span class="line">smember <span class="built_in">set</span> xxx 判断xxx是否在<span class="built_in">set</span>中</span><br><span class="line">scard <span class="built_in">set</span> 获取<span class="built_in">set</span>中元素个数</span><br><span class="line">srem <span class="built_in">set</span> xxx 移除xxx</span><br><span class="line"></span><br><span class="line">srandmember <span class="built_in">set</span> 随机抽出元素</span><br><span class="line">srandmember <span class="built_in">set</span> 2 随机抽出2个元素</span><br><span class="line"></span><br><span class="line">smove <span class="built_in">set</span> newset xxx 将xxx从<span class="built_in">set</span>移动到newset</span><br><span class="line"></span><br><span class="line">spop随机删除一个元素</span><br><span class="line"></span><br><span class="line">sdiff set1 set2 看两个<span class="built_in">set</span>的不同元素</span><br><span class="line">sinter set1 set2 看交集 </span><br><span class="line">sunion set1 set2 看并集</span><br></pre></td></tr></table></figure><h4 id="Hash">Hash</h4><p>key-map</p><p>key-&lt;key,map&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hset</span><br><span class="line">hmset</span><br><span class="line">hget</span><br><span class="line">hmget</span><br><span class="line">hdel</span><br><span class="line">hgetall</span><br><span class="line">hlen</span><br></pre></td></tr></table></figure><p>Zset</p><p>在set的基础上增加了一个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zset</span><br><span class="line">zadd zset 1000 xxx</span><br><span class="line">zrangescore zset -inf +inf 排序</span><br></pre></td></tr></table></figure><h3 id="事务">事务</h3><p>Redis单条命令保存原子性，事务不保证原子性</p><p>Redis没有隔离级别的概念</p><p>Redis事务本质一组命令的集合 ；一个事务中所有命令都会被序列化，在事务执行过程中，会按顺序执行；一次性顺序性排他性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">multi 开启事务，下面输入的命令都会暂时放在队列里</span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span>执行队列中的命令</span><br><span class="line">discard取消事务</span><br></pre></td></tr></table></figure><ul><li><p>有错误的命令（例如getset）其他所有的命令都不会执行</p></li><li><p>命令不存在语法性错误，命令执行时其他命令是我可以执行的</p></li></ul><h3 id="Redis实现乐观锁">Redis实现乐观锁</h3><ul><li><p>乐观锁</p><p>认为什么时候都不会出现问题，不会上锁，更新数据时判断，在此期间是否有人修改过这个数据，数据被更改事务执行失败</p></li><li><p>悲观锁</p><p>认为什么时候都会出现问题，无论做什么都加锁</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">watch xxx 监视xxx</span><br><span class="line">multi </span><br><span class="line">命令</span><br><span class="line"><span class="built_in">exec</span> 若xxx在事务期间改变会执行失败</span><br></pre></td></tr></table></figure><h3 id="Jedis">Jedis</h3><p>pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Jedis jedis &#x3D; new Jedis(&quot;host&quot;,6379);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Redis学习笔记&quot;&gt;Redis学习笔记&lt;/h2&gt;
&lt;p&gt;NoSQL（Not only SQL）&lt;/p&gt;
&lt;p&gt;泛指非关系型数据库&lt;/p&gt;
&lt;h3 id=&quot;Redis数据类型&quot;&gt;Redis数据类型&lt;/h3&gt;
&lt;h4 id=&quot;String&quot;&gt;String&lt;/h4&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring Cloud 学习笔记</title>
    <link href="http://verge.ink/2020/11/09/Spring%20Cloud%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://verge.ink/2020/11/09/Spring%20Cloud%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-09T12:21:16.502Z</published>
    <updated>2020-12-21T09:13:34.985Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>Spring Cloud 学习笔记</h1><h2 id="版本选择">版本选择</h2><p>通过访问<code>https://start.spring.io/actuator/info</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"git"</span>: &#123;</span><br><span class="line"><span class="attr">"branch"</span>: <span class="string">"82af3869647d62a1e520a076908c14eee4715d8d"</span>,</span><br><span class="line"><span class="attr">"commit"</span>: &#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="string">"82af386"</span>,</span><br><span class="line"><span class="attr">"time"</span>: <span class="string">"2020-11-02T15:56:02Z"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"build"</span>: &#123;</span><br><span class="line"><span class="attr">"version"</span>: <span class="string">"0.0.1-SNAPSHOT"</span>,</span><br><span class="line"><span class="attr">"artifact"</span>: <span class="string">"start-site"</span>,</span><br><span class="line"><span class="attr">"versions"</span>: &#123;</span><br><span class="line"><span class="attr">"spring-boot"</span>: <span class="string">"2.3.5.RELEASE"</span>,</span><br><span class="line"><span class="attr">"initializr"</span>: <span class="string">"0.10.0-SNAPSHOT"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"start.spring.io website"</span>,</span><br><span class="line"><span class="attr">"time"</span>: <span class="string">"2020-11-02T16:15:14.702Z"</span>,</span><br><span class="line"><span class="attr">"group"</span>: <span class="string">"io.spring.start"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"bom-ranges"</span>: &#123;</span><br><span class="line"><span class="attr">"azure"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.10"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE and &lt;2.1.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"2.1.10"</span>: <span class="string">"Spring Boot &gt;=2.1.0.RELEASE and &lt;2.2.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.2.4"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M1 and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.3.5"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"codecentric-spring-boot-admin"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.6"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M1 and &lt;2.1.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.1.6"</span>: <span class="string">"Spring Boot &gt;=2.1.0.M1 and &lt;2.2.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.2.4"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M1 and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.3.0"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1 and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"solace-spring-boot"</span>: &#123;</span><br><span class="line"><span class="attr">"1.0.0"</span>: <span class="string">"Spring Boot &gt;=2.2.0.RELEASE and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"1.1.0"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"solace-spring-cloud"</span>: &#123;</span><br><span class="line"><span class="attr">"1.0.0"</span>: <span class="string">"Spring Boot &gt;=2.2.0.RELEASE and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"1.1.1"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"spring-cloud"</span>: &#123;</span><br><span class="line"><span class="attr">"Finchley.M2"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M3 and &lt;2.0.0.M5"</span>,</span><br><span class="line"><span class="attr">"Finchley.M3"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M5 and &lt;=2.0.0.M5"</span>,</span><br><span class="line"><span class="attr">"Finchley.M4"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M6 and &lt;=2.0.0.M6"</span>,</span><br><span class="line"><span class="attr">"Finchley.M5"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M7 and &lt;=2.0.0.M7"</span>,</span><br><span class="line"><span class="attr">"Finchley.M6"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RC1 and &lt;=2.0.0.RC1"</span>,</span><br><span class="line"><span class="attr">"Finchley.M7"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RC2 and &lt;=2.0.0.RC2"</span>,</span><br><span class="line"><span class="attr">"Finchley.M9"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE and &lt;=2.0.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"Finchley.RC1"</span>: <span class="string">"Spring Boot &gt;=2.0.1.RELEASE and &lt;2.0.2.RELEASE"</span>,</span><br><span class="line"><span class="attr">"Finchley.RC2"</span>: <span class="string">"Spring Boot &gt;=2.0.2.RELEASE and &lt;2.0.3.RELEASE"</span>,</span><br><span class="line"><span class="attr">"Finchley.SR4"</span>: <span class="string">"Spring Boot &gt;=2.0.3.RELEASE and &lt;2.0.999.BUILD-SNAPSHOT"</span>,</span><br><span class="line"><span class="attr">"Finchley.BUILD-SNAPSHOT"</span>: <span class="string">"Spring Boot &gt;=2.0.999.BUILD-SNAPSHOT and &lt;2.1.0.M3"</span>,</span><br><span class="line"><span class="attr">"Greenwich.M1"</span>: <span class="string">"Spring Boot &gt;=2.1.0.M3 and &lt;2.1.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"Greenwich.SR6"</span>: <span class="string">"Spring Boot &gt;=2.1.0.RELEASE and &lt;2.1.999.BUILD-SNAPSHOT"</span>,</span><br><span class="line"><span class="attr">"Greenwich.BUILD-SNAPSHOT"</span>: <span class="string">"Spring Boot &gt;=2.1.999.BUILD-SNAPSHOT and &lt;2.2.0.M4"</span>,</span><br><span class="line"><span class="attr">"Hoxton.SR8"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M4 and &lt;2.3.6.BUILD-SNAPSHOT"</span>,</span><br><span class="line"><span class="attr">"Hoxton.BUILD-SNAPSHOT"</span>: <span class="string">"Spring Boot &gt;=2.3.6.BUILD-SNAPSHOT and &lt;2.4.0.M1"</span>,</span><br><span class="line"><span class="attr">"2020.0.0-M3"</span>: <span class="string">"Spring Boot &gt;=2.4.0.M1 and &lt;=2.4.0.M1"</span>,</span><br><span class="line"><span class="attr">"2020.0.0-M4"</span>: <span class="string">"Spring Boot &gt;=2.4.0.M2 and &lt;=2.4.0-M3"</span>,</span><br><span class="line"><span class="attr">"2020.0.0-SNAPSHOT"</span>: <span class="string">"Spring Boot &gt;=2.4.0-M4"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"spring-cloud-alibaba"</span>: &#123;</span><br><span class="line"><span class="attr">"2.2.1.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.2.0.RELEASE and &lt;2.3.0.M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"spring-cloud-services"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.3.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE and &lt;2.1.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"2.1.8.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.1.0.RELEASE and &lt;2.2.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"2.2.6.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.2.0.RELEASE and &lt;2.3.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"2.3.0.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.3.0.RELEASE and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"spring-statemachine"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.0.M4"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RC1 and &lt;=2.0.0.RC1"</span>,</span><br><span class="line"><span class="attr">"2.0.0.M5"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RC2 and &lt;=2.0.0.RC2"</span>,</span><br><span class="line"><span class="attr">"2.0.1.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"vaadin"</span>: &#123;</span><br><span class="line"><span class="attr">"10.0.17"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M1 and &lt;2.1.0.M1"</span>,</span><br><span class="line"><span class="attr">"14.4.2"</span>: <span class="string">"Spring Boot &gt;=2.1.0.M1 and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"wavefront"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.2"</span>: <span class="string">"Spring Boot &gt;=2.1.0.RELEASE and &lt;2.4.0-M1"</span>,</span><br><span class="line"><span class="attr">"2.1.0-SNAPSHOT"</span>: <span class="string">"Spring Boot &gt;=2.4.0-M1"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"dependency-ranges"</span>: &#123;</span><br><span class="line"><span class="attr">"okta"</span>: &#123;</span><br><span class="line"><span class="attr">"1.2.1"</span>: <span class="string">"Spring Boot &gt;=2.1.2.RELEASE and &lt;2.2.0.M1"</span>,</span><br><span class="line"><span class="attr">"1.4.0"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M1 and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"mybatis"</span>: &#123;</span><br><span class="line"><span class="attr">"2.0.1"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE and &lt;2.1.0.RELEASE"</span>,</span><br><span class="line"><span class="attr">"2.1.3"</span>: <span class="string">"Spring Boot &gt;=2.1.0.RELEASE and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"geode"</span>: &#123;</span><br><span class="line"><span class="attr">"1.2.10.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M5 and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"1.3.4.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1 and &lt;2.4.0-M1"</span>,</span><br><span class="line"><span class="attr">"1.4.0-M4"</span>: <span class="string">"Spring Boot &gt;=2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"camel"</span>: &#123;</span><br><span class="line"><span class="attr">"2.22.4"</span>: <span class="string">"Spring Boot &gt;=2.0.0.M1 and &lt;2.1.0.M1"</span>,</span><br><span class="line"><span class="attr">"2.25.2"</span>: <span class="string">"Spring Boot &gt;=2.1.0.M1 and &lt;2.2.0.M1"</span>,</span><br><span class="line"><span class="attr">"3.3.0"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M1 and &lt;2.3.0.M1"</span>,</span><br><span class="line"><span class="attr">"3.5.0"</span>: <span class="string">"Spring Boot &gt;=2.3.0.M1 and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"open-service-broker"</span>: &#123;</span><br><span class="line"><span class="attr">"2.1.3.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.0.0.RELEASE and &lt;2.1.0.M1"</span>,</span><br><span class="line"><span class="attr">"3.0.4.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.1.0.M1 and &lt;2.2.0.M1"</span>,</span><br><span class="line"><span class="attr">"3.1.1.RELEASE"</span>: <span class="string">"Spring Boot &gt;=2.2.0.M1 and &lt;2.4.0-M1"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择Spring boot版本和Spring cloud版本</p><h2 id="引入spring-cloud-alibaba">引入spring cloud alibaba</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 <code>dependencies</code> 中添加自己所需使用的依赖即可使用。</p><h3 id="版本管理规范">版本管理规范</h3><p>项目的版本号格式为 x.x.x 的形式，其中 x 的数值类型为数字，从 0 开始取值，且不限于 0~9 这个范围。项目处于孵化器阶段时，第一位版本号固定使用 0，即版本号为 0.x.x 的格式。</p><p>由于 Spring Boot 1 和 Spring Boot 2 在 Actuator 模块的接口和注解有很大的变更，且 spring-cloud-commons 从 1.x.x 版本升级到 2.0.0 版本也有较大的变更，因此我们采取跟 SpringBoot 版本号一致的版本:</p><ul><li>1.5.x 版本适用于 Spring Boot 1.5.x</li><li>2.0.x 版本适用于 Spring Boot 2.0.x</li><li>2.1.x 版本适用于 Spring Boot 2.1.x</li><li>2.2.x 版本适用于 Spring Boot 2.2.x</li></ul><h2 id="使用nacos">使用nacos</h2><h3 id="下载安装">下载安装</h3><p>下载地址https://github.com/alibaba/nacos/releases</p><p>windows上运行下载.zip文件，运行startup.cmd</p><p>默认端口为8848</p><h3 id="注册">注册</h3><p>配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">application</span> <span class="string">name</span></span><br></pre></td></tr></table></figure><h2 id="使用OpenFeign">使用OpenFeign</h2><h3 id="引入依赖">引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="写接口">写接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"要调用的服务名"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CouponFeignService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"路径"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">list</span><span class="params">(@RequestParam Map&lt;String, Object&gt; params)</span></span>;<span class="comment">// 与被调用的方法相同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启远程调用功能">开启远程调用功能</h3><p>在spring启动类中添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span>(basePackages = <span class="string">"接口所在包"</span>)</span><br></pre></td></tr></table></figure><h2 id="Nacos配置中心">Nacos配置中心</h2><h3 id="引入依赖-2">引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置文件">配置文件</h3><p>新建bootstrap.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span>    </span><br><span class="line">    <span class="attr">cloud:</span></span><br><span class="line">        <span class="attr">nacos:</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">    <span class="attr">application:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">gulimall-coupon</span></span><br></pre></td></tr></table></figure><h3 id="配置中心添加">配置中心添加</h3><p>应用名.后缀</p><h3 id="动态获取配置">动态获取配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RefreshScope</span></span><br></pre></td></tr></table></figure><p>配置中心和本地配置冲突时，优先使用配置中心</p><h3 id="其他">其他</h3><h4 id="命名空间：配置隔离">命名空间：配置隔离</h4><p>例如：</p><ol><li>开发环境，测试环境，生产环境</li><li>微服务</li></ol><p>修改默认命名空间</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">5c990c25-30e9-4490-8e52-aaa45d8bbeb9</span> <span class="string">命名空间id</span></span><br></pre></td></tr></table></figure><p><img src="D:%5CPersonal%5CBlog%5Csource_posts%5Cimg%5C84@_NEV9%5B%5DLIK_WB9~WV%7BVI.png" alt="img"></p><h4 id="配置集">配置集</h4><h4 id="配置分组">配置分组</h4><h2 id="网关Spring-Cloud-Gateway">网关Spring Cloud Gateway</h2><h3 id="引入依赖-3">引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="出现the-‘Access-Control-Allow-Origin’-header-contains-multiple-values">出现the ‘Access-Control-Allow-Origin’ header contains multiple values</h3><p><img src="D:%5CPersonal%5CBlog%5Csource_posts%5Cimg%5C1.png" alt="1"></p><p>这是spring的一个问题</p><p>可以通过修改配置文件解决</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">default-filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">DedupeResponseHeader=Access-Control-Allow-Origin</span> <span class="string">Access-Control-Allow-Credentials,</span> <span class="string">RETAIN_UNIQUE</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;Spring Cloud 学习笔记&lt;/h1&gt;
&lt;h2 id=&quot;版本选择&quot;&gt;版本选择&lt;/h2&gt;
&lt;p&gt;通过访问&lt;code&gt;https://start.spring.io/actuator/info&lt;/code&gt;&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Vue学习笔记</title>
    <link href="http://verge.ink/2020/10/12/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://verge.ink/2020/10/12/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-12T13:22:52.990Z</published>
    <updated>2020-10-12T13:22:52.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue学习笔记">Vue学习笔记</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue学习笔记&quot;&gt;Vue学习笔记&lt;/h2&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring boot解决跨域问题</title>
    <link href="http://verge.ink/2020/09/15/CORS/"/>
    <id>http://verge.ink/2020/09/15/CORS/</id>
    <published>2020-09-15T09:02:19.000Z</published>
    <updated>2020-09-15T09:03:07.938Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fehead.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CORSConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsFilter <span class="title">corsFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.添加CORS配置信息</span></span><br><span class="line">        CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        <span class="comment">//1) 允许的域,不要写*，否则cookie就无法使用了</span></span><br><span class="line">        config.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">        config.addAllowedHeader(<span class="string">"*"</span>); <span class="comment">// 允许任何头</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">"*"</span>); <span class="comment">// 允许任何方法（post、get等）</span></span><br><span class="line">        <span class="comment">//2) 是否发送Cookie信息</span></span><br><span class="line">        config.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3) 允许的请求方式</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">"OPTIONS"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"HEAD"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"GET"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"PUT"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"POST"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"DELETE"</span>);</span><br><span class="line">        config.addAllowedMethod(<span class="string">"PATCH"</span>);</span><br><span class="line">        <span class="comment">// 4）允许的头信息</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5)配置有效时长</span></span><br><span class="line">        config.setMaxAge(<span class="number">3600</span>*<span class="number">24L</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加映射路径，我们拦截一切请求</span></span><br><span class="line">        UrlBasedCorsConfigurationSource configSource = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        configSource.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.返回新的CorsFilter.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CorsFilter(configSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linxu命令</title>
    <link href="http://verge.ink/2020/09/14/linxu-command/"/>
    <id>http://verge.ink/2020/09/14/linxu-command/</id>
    <published>2020-09-14T04:28:37.000Z</published>
    <updated>2020-12-15T06:22:25.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="防火墙">防火墙</h2><h3 id="开发80端口">开发80端口</h3><p><code> firewall-cmd --zone=public --add-port=80/tcp --permanent</code></p><h3 id="查询端口号80-是否开启">查询端口号80 是否开启</h3><p><code>firewall-cmd --query-port=80/tcp</code></p><h3 id="重启防火墙">重启防火墙</h3><p><code> firewall-cmd --reload</code></p><h3 id="查询有哪些端口是开启的">查询有哪些端口是开启的</h3><p><code>firewall-cmd --list-port</code></p><h3 id="参数说明">参数说明</h3><p><code>--zone #作用域 --add-port=80/tcp #添加端口，格式为：端口/通讯协议 --permanent #永久生效，没有此参数重启后失效</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;防火墙&quot;&gt;防火墙&lt;/h2&gt;
&lt;h3 id=&quot;开发80端口&quot;&gt;开发80端口&lt;/h3&gt;
&lt;p&gt;&lt;code&gt; firewall-cmd --zone=public --add-port=80/tcp --permanent&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;查询端口
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>learn—_java</title>
    <link href="http://verge.ink/2020/08/07/learn%E2%80%94-java/"/>
    <id>http://verge.ink/2020/08/07/learn%E2%80%94-java/</id>
    <published>2020-08-07T14:57:56.000Z</published>
    <updated>2020-08-07T14:57:57.003Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我是如何实现易班自动打卡的？</title>
    <link href="http://verge.ink/2020/07/28/yiban-autocheck/"/>
    <id>http://verge.ink/2020/07/28/yiban-autocheck/</id>
    <published>2020-07-28T06:01:36.000Z</published>
    <updated>2020-08-06T08:47:42.038Z</updated>
    
    <content type="html"><![CDATA[<p>需要用到的工具</p><p>HttpCanary</p><h2 id="抓包">抓包</h2><ol><li>先进入易班，然后退出登录，方便我们一会记录整个登录和打卡的过程</li><li>打开HttpCanary将易班添加为目标程</li><li>开始抓包</li><li>完成从登录易班到打卡完成的整个过程的抓包</li></ol><h2 id="分析">分析</h2><p>我们倒着来分析</p><ol><li><p>抓到了很多数据包，但是音频和图片js…文件是我们不需要的，因此进行过滤保留这三种数据包即可</p></li><li><p>开始一个一个分析，发现一个数据包很可疑，打开一看这不就是我们提交的表单吗</p></li><li><p>验证猜想，重发这个请求，返回消息如下，可以确定这就是我们要找的数据包</p></li><li><p>猜想是否可以依靠每天自动重发这个请求实现签到，答案是否定的，是什么原因呢</p><ol><li><p>分析该请求的请求头，发现这里有一个Cookie，有两个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">client&#x3D;android</span><br><span class="line">PHPSESSID&#x3D;96098a2d53fdfef072b13f7113da5e17</span><br></pre></td></tr></table></figure></li><li><p>第一个不用说，第二个就是罪魁祸首，一看这名字就知道肯定和SESSION有关，百度一下</p></li></ol></li><li><p>好了这下目标明确，寻找是谁第一次Set了这个Cookie，筛选，好了就是他，理论上我们只要，发送一下这个请求就可以拿到Cookie</p></li><li><p>问题又来了，这些又是啥？？？继续往下看</p></li><li><p>首先猜测一下这个act=iappxxxxx应该是易班小程序的ID，那么OK，他是不会变的，记住就行了，那么这个v是什么？看了看他的前一个请求发现就是access_token</p></li><li><p>好了继续寻找access_token</p></li><li><p>拉到最下面，第一个请求应该就是登录的请求，查看他的响应信息果然access_token就在里面</p></li><li><p>至此，抓包数据分析完成</p></li></ol><p><strong>总结：</strong></p><ol><li>登录拿到access_token</li><li>拿着access_token去获得Cookie</li><li>拿着Cookie提交表单</li><li>完成</li></ol><h2 id="代码">代码</h2><p><strong>以下使用java，使用Hutool进行Http请求、json解析等等等</strong></p><p>获取Access_token</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CommonResult <span class="title">getAccess_token</span><span class="params">(String username, String password)</span></span>&#123;</span><br><span class="line">        <span class="comment">//设置请求参数</span></span><br><span class="line">        HashMap&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"account"</span>,username);</span><br><span class="line">        map.put(<span class="string">"passwd"</span>,password);</span><br><span class="line">        map.put(<span class="string">"ct"</span>,<span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">"identify"</span>,<span class="number">0</span>);</span><br><span class="line">        map.put(<span class="string">"v"</span>,<span class="string">"4.7.4"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取返回的字符串</span></span><br><span class="line">        String jsonStr = HttpUtil.get(<span class="string">"https://mobile.yiban.cn/api/v2/passport/login"</span>,map);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把获取到的字符串转换为JSONObject对象</span></span><br><span class="line">        JSONObject jsonObject = JSONUtil.parseObj(jsonStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//try catch一下，以防获取到一些奇奇怪怪的东西</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//比较状态码，是否登陆成功</span></span><br><span class="line">            <span class="keyword">if</span> (jsonObject.get(<span class="string">"response"</span>).equals(<span class="string">"100"</span>))&#123;</span><br><span class="line">                String res = ((JSONObject) jsonObject.get(<span class="string">"data"</span>)).getStr(<span class="string">"access_token"</span>);</span><br><span class="line">                <span class="keyword">return</span> CommonResult.success(res,<span class="string">"拿到数据了"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> CommonResult.failed(<span class="string">"登录失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> CommonResult.failed(<span class="string">"易班返回的Json数据可能有变化"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>获取Cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CommonResult <span class="title">getPHPSESSID</span><span class="params">(String access_token)</span></span>&#123;</span><br><span class="line">        <span class="comment">//请求数据</span></span><br><span class="line">        HashMap&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"act"</span>,<span class="string">"iapp610661"</span>);</span><br><span class="line">        map.put(<span class="string">"access_token"</span>,access_token);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送请求，从cookie中获取PHPSESSIONID</span></span><br><span class="line">        HttpResponse response = HttpRequest</span><br><span class="line">                .get(<span class="string">"http://f.yiban.cn/iapp/index"</span>)</span><br><span class="line">                .form(map)</span><br><span class="line">                .setFollowRedirects(<span class="keyword">true</span>)</span><br><span class="line">                .execute();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String res = response.header(<span class="string">"Set-Cookie"</span>);</span><br><span class="line">            <span class="keyword">return</span> CommonResult.success(res,<span class="string">"成功获取SESSID"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e) &#123;</span><br><span class="line">            System.out.println(response.toString());</span><br><span class="line">            <span class="keyword">return</span> CommonResult.failed(<span class="string">"没获取到SESSID"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>提交表单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CommonResult <span class="title">submit</span><span class="params">(String cookie, String content)</span></span>&#123;</span><br><span class="line">        HttpResponse response = HttpRequest.post(<span class="string">"http://yiban.sust.edu.cn/v4/public/index.php/Index/form/add.html?id=9"</span>)</span><br><span class="line">                .contentType(<span class="string">"application/x-www-form-urlencoded"</span>)</span><br><span class="line">                .body(content)</span><br><span class="line">                .cookie(cookie)</span><br><span class="line">                .execute();</span><br><span class="line">        JSONObject jsonObject = JSONUtil.parseObj(response.body());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jsonObject.get(<span class="string">"code"</span>).equals(<span class="string">"1"</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> CommonResult.success(jsonObject.getStr(<span class="string">"msg"</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> CommonResult.failed(jsonObject.getStr(<span class="string">"msg"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e)&#123;</span><br><span class="line">            <span class="keyword">return</span> CommonResult.failed(e.getMessage()+  <span class="string">"没找到返回的code，奇了怪了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发送邮件(不得不说Hutool就是好用)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MailUtil.send(<span class="string">"你的邮箱"</span>,标题,内容,是否为html(<span class="keyword">boolean</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需要用到的工具&lt;/p&gt;
&lt;p&gt;HttpCanary&lt;/p&gt;
&lt;h2 id=&quot;抓包&quot;&gt;抓包&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;先进入易班，然后退出登录，方便我们一会记录整个登录和打卡的过程&lt;/li&gt;
&lt;li&gt;打开HttpCanary将易班添加为目标程&lt;/li&gt;
&lt;li&gt;开始抓包&lt;/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>算法学习笔记</title>
    <link href="http://verge.ink/2020/07/21/algorithm/"/>
    <id>http://verge.ink/2020/07/21/algorithm/</id>
    <published>2020-07-21T08:00:47.000Z</published>
    <updated>2020-07-26T07:32:18.995Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="枚举">枚举</h2><ul><li>一一列举</li><li>不重复，不遗漏</li></ul><h3 id="优化枚举的基本思路">优化枚举的基本思路</h3><p>减少枚举次数</p><ul><li>选择合适的枚举对象</li><li>选择合适的枚举方向 ——方便排除非法和不是最优的情况</li><li>选择合适的数据维护方法 ——转化问题</li></ul><h4 id="例1-最大正方形">例1.最大正方形</h4><p>题目</p><p>在一个N*N（N&lt;100）的矩阵中求一个最大的正方形使得该正方形的四个顶点是由“#”构成</p><p>##**#</p><p>*****</p><p>**##*</p><p>#*#*#*</p><p>*#*#*</p><p>思路</p><ol><li>几个点可以确定一个正方形？<ul><li>对角线上的两个点确定一个正方形</li></ul></li><li>明确思路使用枚举法，枚举所有两个点的组合，判断剩下两个点是否是#，是的话记录面积不是就继续枚举下一个组合，直至枚举完所有集合</li></ol><h3 id="前缀和">前缀和</h3><p>对于一个数列，再开一个数组，第n个数就存前n个数字的和</p><h4 id="例2-数列求和问题">例2 数列求和问题</h4><p>给定一个数列{an}（1&lt;= n &lt;= 100000）,有q（1&lt;= n &lt;= 100000）次询问，每次询问从i到j的元素之和</p><p><strong>思路</strong></p><ol><li>暴力，直接算（范围大的话必超时）</li><li>先便利数据，求前缀和，存到数组中</li><li>使用时直接求aj-ai即可</li></ol><h3 id="差分">差分</h3><h4 id="例3-数列修改问题">例3 数列修改问题</h4><p>给定一个数列{an}（1&lt;= n &lt;= 100000）,有q（1&lt;= n &lt;= 100000）次修改，每次修改把从i到j的每个元素加上k，求所有修改之后的每个数值</p><p><strong>思路</strong></p><ol><li>暴力，每次修改都遍历区间（时间复杂度太大）</li><li>思考问题，进行修改时区间什么没有变，什么变了<ol><li>区间内各个元素之间的差值未变</li><li>端点处的差值改变</li></ol></li><li>把修改的地方从整个区间变到区间的端点，就可以大大减少时间复杂度<ol><li>当我们对第i到j个数加上k的话，i与i-1的差值增加了k，j与j加一的差值减少了k，区间内部相邻两数差值不变</li><li>因此可以使用一个数组来维护第i个数和第i-1个数的差值（默认第一个数的前一个数是0），将[i,j]这个区间的每个数+1时，只需要修改i和j+1（i+k，j+1-k）</li><li>对这个数组求前缀和，即可得到数列的值</li><li>这种方法叫<strong>差分</strong></li></ol></li></ol><h3 id="差分与前缀和的关系">差分与前缀和的关系</h3><p>差分和前缀和是一对对称的操作</p><p>差分数组求前缀和就是原数组，对前缀和求差分也能得到原数组</p><h3 id="尺取法">尺取法</h3><p>给定长度为n的正整数数列以及整数S，求出总和不小于S的连续子串的长度的最小值，如果接不存在，输出0</p><ol><li>暴力，枚举两个点的所有组合，选择和大于等于S的最短子串（时间复杂度爆炸）（O（n3））</li><li>优化，使用前缀和省去计算和的那一步复杂度变为（O（n2）），依然不低</li><li>使用尺取法（O（n））<ol><li>确定两个端点，从数组0开始</li><li>首先向右移动右边的端点，判断和是否大于S，若大于S就移动左边的端点，一直移动直至再移动一次就不大于S时，记录长度</li><li>继续移动右端点，重复2，直至数组结束</li><li>得出最小距离</li></ol></li></ol><h2 id="贪心">贪心</h2><ol><li>对问题求解时，总是做出在当前看来最好的选择，不从整体上考虑，做出的选择是局部是上最优解</li><li>使用贪心算法解决的问题都是能够证贪心出的局部最优解是所求的全局最优解</li></ol><h2 id="STL">STL</h2><h3 id="算法类">算法类</h3><ul><li><p>**sort(beg,end,comp)**给数组排序，返回排号的数组,cmp可以不写，comp用来定义比较方法</p><ul><li><pre><code class="language-c++">int a[10]= {1, 5, 8, 9, 6, 7, 3, 4, 2, 0};sort(a, a+10);//两个参数，第一个是你要排的的开始位置的指针，第二个是结束处的指针的下一位//可以理解为从a开始，要排几位//STL遵循[a,b)原则，因此是a到a+10</code></pre></li></ul></li><li><p><strong>search</strong></p><ul><li><strong>binary_search(起始地址，结束地址，要查找的值)</strong>，返回布尔值，匹配返回true</li><li>**lower_bound(beg,end,val)**返回可插入的最小位置的迭代器（可以理解为指针）<ul><li>例插入3</li><li>1 2 2 2 (可以被插到这) <strong>3</strong> 3 3 4 5</li><li>返回加粗3处的指针</li><li>第一个<strong>大于等于</strong>你查询的数的位置</li></ul></li><li>**upper_bound(beg,end,val)**返回可插入的最大位置的迭代器（可以理解为指针）<ul><li>1 2 2 2  3 3 3 (可以被插到这) <strong>4</strong> 5</li><li>返回加粗4处的指针</li><li>第一个<strong>大于</strong>你查询的数的位置</li></ul></li><li><strong>使用前数组一定要排序</strong></li></ul></li><li><p>**find(beg,end,val)**返回val第一次出现的地址</p></li><li><p><strong>count(beg,end,val)<strong>返回val的出现次数 返回一个</strong>ptrdiff_t</strong>(typedef long long ptrdiff_t)我也不知道这是个啥</p></li><li><p>**swap(a,b)**交换两个数</p></li><li></li></ul><h2 id="二分、三分">二分、三分</h2><h3 id="二分查找">二分查找</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;枚举&quot;&gt;枚举&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一一列举&lt;/li&gt;
&lt;li&gt;不重复，不遗漏&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;优化枚举的基本思路&quot;&gt;优化枚举的基本思路&lt;/h3&gt;
&lt;p&gt;减少枚举次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择合适的枚举对
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记</title>
    <link href="http://verge.ink/2020/06/22/MyBatis/"/>
    <id>http://verge.ink/2020/06/22/MyBatis/</id>
    <published>2020-06-22T02:21:37.000Z</published>
    <updated>2020-07-01T08:26:35.926Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="环境搭建">环境搭建</h2><ol><li><p>创建实体类和实体类的接口</p><ol><li>User</li><li>IUserDao</li></ol></li><li><p>配置主配置文件</p><p>SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置 mybatis 的环境 default属性没有固定的值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置 mysql 的环境 这里的ID需要和environments标签中的default属性相同--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务的类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置连接数据库的信息：用的是数据源(连接池) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://121.36.19.47:3306/mybatis_learn"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 告知 mybatis 映射配置的位置 每个Dao独立的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"dao/IUserDao.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建映射配置文件</p><ol><li><p>IUserDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace写类的全限定类名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"dao.IUserDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置查询所有操作 ID填写方法名 resultType填写要封装成的JavaBean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"domain.User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><p><strong>注意</strong>：</p><ol><li>MyBatis的映射配置文件位置必须和Dao接口的包结构相同</li><li>映射配置文件的mapper标签的namespace属性取值必须是Dao接口的全限定类名</li><li>映射配置文件的操作配置，id属性的取值必须是dao接口的方法名</li></ol><p>​遵从这三点，在开发中就无需实现IUserDao的类，MyBatis代替我们完成</p><h2 id="使用">使用</h2><ol><li><p>读取配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br></pre></td></tr></table></figure></li><li><p>创建SqlSessionFactory工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">SqlSessionFactory factory = builder.build(in);</span><br></pre></td></tr></table></figure></li><li><p>创建SqlSession对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlSession session = factory.openSession();</span><br></pre></td></tr></table></figure></li><li><p>创建Dao接口的代理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IUserDao userDao = session.getMapper(IUserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure></li><li><p>释放资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.close();</span><br><span class="line">in.close();</span><br></pre></td></tr></table></figure></li></ol><h2 id="注解使用">注解使用</h2><ol><li><p>省略映射配置文件</p></li><li><p>在要实现的接口上写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"Sql语句"</span>)</span><br></pre></td></tr></table></figure></li><li><p>主配置文件&lt;mapper&gt;标签下使用class属性指定被注解的Dao全限定类名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"dao.IUserDao"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="CURD">CURD</h2><h3 id="增">增</h3><h4 id="配置文件写法">配置文件写法</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"domain.User"</span>&gt;</span></span><br><span class="line">INSERT INTO user(username,sex,address) VALUS(#&#123;username&#125;,#&#123;sex&#125;,#&#123;address&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注解写法">注解写法</h4> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">Insert</span>(<span class="string">"INSERT INTO user(username,sex,address) VALUS(#&#123;username&#125;,#&#123;sex&#125;,#&#123;address&#125;)"</span>)</span><br></pre></td></tr></table></figure><p>需要向接口中传入一个User对象</p><p>最后需要commit</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.commit();</span><br></pre></td></tr></table></figure><h4 id="获取插入数据的ID">获取插入数据的ID</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"domain.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">keyColumn</span>=<span class="string">”id“</span> <span class="attr">resultType</span>=<span class="string">"int"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span>&gt;</span></span><br><span class="line">        SELECT last_insert_id();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">INSERT INTO user(username,sex,address) VALUS(#&#123;username&#125;,#&#123;sex&#125;,#&#123;address&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>keyProperty表示返回值的名称</p><p>order表示执行该命令的时间，AFTER表示插入之后再执行</p><h3 id="改、删">改、删</h3><p>与增加操作类似只需要改变标签名称或注解的@Xxx</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"Xxx"</span> <span class="attr">parameterType</span>=<span class="string">"xx.xx"</span>&gt;</span></span><br><span class="line">Sql语句</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"Xxx"</span> <span class="attr">parameterType</span>=<span class="string">"xx.xx"</span>&gt;</span></span><br><span class="line">Sql语句</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update</span>(<span class="string">"...."</span>)</span><br><span class="line"><span class="meta">@Delete</span>(<span class="string">"...."</span>)</span><br></pre></td></tr></table></figure><h3 id="查">查</h3><h3 id="获取用户总记录的条数">获取用户总记录的条数</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findTotal"</span> <span class="attr">resultType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">SELECT count(id) FROM user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="OGNL表达式">OGNL表达式</h2><p>Object Graphic Navigation Language</p><h2 id="连接池与事务控制">连接池与事务控制</h2><h3 id="MyBatis中的连接池">MyBatis中的连接池</h3><p>mybatis中提供了3种方式配置</p><p>在SqlMapConfig.xml中的dataSource标签中，type属性就是配置采用何种连接池的方式</p><ul><li>POOLED采用传统javax.sql.DataSource规范中的连接池</li><li>UNPOOLED  虽然实现了javax.sql.DataSource，但没有使用池的思想</li><li>JNDI</li></ul><h3 id="事务">事务</h3><p>可以在创造SqlSession对象时，给OpenSession中传一个true，就可以实现自动提交</p><h2 id="动态SQL语句">动态SQL语句</h2><h3 id="if-标签">&lt;if&gt;标签</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span> <span class="attr">resultType</span>=<span class="string">"domain.User"</span> <span class="attr">parameterType</span>=<span class="string">"domain.User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != NULL"</span>&gt;</span></span><br><span class="line">    AND username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    AND ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="where">&lt;where&gt;</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span> <span class="attr">resultType</span>=<span class="string">"domain.User"</span> <span class="attr">parameterType</span>=<span class="string">"domain.User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != NULL"</span>&gt;</span></span><br><span class="line">    AND username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    AND ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多表查询">多表查询</h2><p>I don’t have a favorite singer, but a film soundtrack composer whose name is hans zimmer is my favorite composer. I know him from a film called Interstellar. At the same time, Interstellar is also my favorite film. It is because of this excellent OST that there are such excellent film。</p><p>Let’s enjoy it together</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;环境搭建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建实体类和实体类的接口&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;User&lt;/li&gt;
&lt;li&gt;IUserDao&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置主配置文件&lt;/p&gt;
&lt;p&gt;S
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库连接池</title>
    <link href="http://verge.ink/2020/06/01/DataSource/"/>
    <id>http://verge.ink/2020/06/01/DataSource/</id>
    <published>2020-06-01T11:46:07.000Z</published>
    <updated>2020-06-28T04:02:57.421Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是数据库连接池">什么是数据库连接池</h2><p>数据库连接池就是一个存放数据库连接的容器</p><p>当系统初始化完成后，容器就被创建，容器中会申请一些连接对象，当用户来访问数据时，从容器中获取连接对象，用户访问完后，将连接对象归还给容器</p><h2 id="实现">实现</h2><ol><li>接口：DataSource<ol><li>方法<ul><li>获取连接：getConnection()</li><li>归还连接：Connection.close()<ul><li>如果连接是从数据库连接池中获得的就归还给连接池，而不是关闭连接</li></ul></li></ul></li><li>由数据库厂商实现\<ol><li>数据库连接池技术<ol><li>C3P0</li><li>Druid</li></ol></li></ol></li></ol></li></ol><h2 id="C3P0">C3P0</h2><h3 id="使用">使用</h3><ol><li>导入jar包</li><li>定义配置文件：<ol><li>c3p0.properties/c3p0-config.xml</li><li>放在src文件夹下</li><li>创建核心对象 数据库连接池对象 ComboPooledDataSource( )</li></ol></li></ol><h2 id="Druid">Druid</h2><h3 id="使用-2">使用</h3><ol><li>导入jar包</li><li>配置文件<ol><li>xxx.properties</li><li>可以叫任意名称，放在任意目录下</li></ol></li><li>加载配置文件<ol><li>Properties</li></ol></li><li>数据库连接池对象 DruidDataSourceFactory<ol><li>参数：字节流对象</li><li>方法：createDataSource获取一个DataSource对象</li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">            pro.load(DruidUtils.class.getClassLoader().getResourceAsStream("druid.properties"));</span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是数据库连接池&quot;&gt;什么是数据库连接池&lt;/h2&gt;
&lt;p&gt;数据库连接池就是一个存放数据库连接的容器&lt;/p&gt;
&lt;p&gt;当系统初始化完成后，容器就被创建，容器中会申请一些连接对象，当用户来访问数据时，从容器中获取连接对象，用户访问完后，将连接对象归还给容器&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>cookie&amp;session</title>
    <link href="http://verge.ink/2020/06/01/cookie-session/"/>
    <id>http://verge.ink/2020/06/01/cookie-session/</id>
    <published>2020-05-31T16:48:08.000Z</published>
    <updated>2020-06-02T06:02:30.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="会话">会话</h2><h3 id="什么是会话">什么是会话</h3><p>一次会话中包含多次请求和响应</p><p>一次会话：浏览器第一次给服务器发送请求，会话建立，指导一方断开为止</p><h3 id="有什么用">有什么用</h3><p>在一次会话范围内的多次请求共享数据</p><h3 id="怎么实现">怎么实现</h3><ol><li>客户端会话技术（数据存放在客户端）：Cookie</li><li>服务端会话技术（数据存放在服务端）：Session</li></ol><h2 id="Cookie">Cookie</h2><h3 id="如何使用">如何使用</h3><ol><li>创建Cookie对象】<ol><li>new Cookie(String name,String value)</li></ol></li><li>发送Ciookie对象<ol><li>response.addCookie(Cookie cookie)</li></ol></li><li>获取Cookie<ol><li>Cookie[] request.getCookies()</li></ol></li></ol><h3 id="原理">原理</h3><ul><li>基于请求头Cookie和响应头Set-Cookie实现</li></ul><h3 id="细节">细节</h3><ol><li><p>一次可以发送多个Cookie（创建多个Cookie对象，多次调用AddCookie）</p></li><li><p>Cookie可以保存多长时间</p><ol><li>默认情况下，浏览器关闭后Cookie销毁</li><li>持久化存储</li><li>setMaxAge(int seconds)<ol><li>正数，将Cookie数据写道硬盘中，设置Cookie存货时间，单位s</li><li>负数，默认值，结束会话删除</li><li>0，删除Cookie信息</li></ol></li></ol></li><li><p>Cookie的获取范围<br>1.</p></li></ol><h3 id="特点和作用">特点和作用</h3><ol><li><p>cookie储存在客户端</p></li><li><p>浏览器对于单个Cookie大小有限制4kb，对一个域名下总cookie数量有限制20个</p></li><li></li></ol><h2 id="Session">Session</h2><h3 id="使用">使用</h3><ol><li><p>获取HttpSession对象(域对象)</p><ol><li>request.getSession()</li></ol></li><li><p>方法</p><ol><li>Object getAttribute(String name)</li><li>void setAttribute(String name,Object value)</li><li>void removeAttribute(String name)</li></ol></li></ol><h3 id="原理-2">原理</h3><p>Session的实现依赖于Cookie</p><p>首次使用时服务器向浏览器发送一个Cookie包含一个JSESSIONID，再次访问时，浏览器向服务器发送JSESSIONID，服务器通过这个ID，确保两次访问使用的是同一个HttpSeesion对象</p><h3 id="细节-2">细节</h3><ol><li>客户端关闭服务器不关闭，两次访问不是同一个Session<ol><li>若需要相同可以设置Cookie的存活时间</li></ol></li><li>服务器关闭客户端不关闭，两次访问不是同一个Session<ol><li>session钝化：</li><li>session活化</li></ol></li><li>Session失效时间<ol><li>服务器关闭</li><li>调用一个自杀方法</li><li>默认失效时间30min</li></ol></li></ol><h3 id="特点">特点</h3><ol><li>存储一次会话的数据，存在服务端</li><li>可以存储任意类型数据，任意大小</li><li>比Cookie安全</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;会话&quot;&gt;会话&lt;/h2&gt;
&lt;h3 id=&quot;什么是会话&quot;&gt;什么是会话&lt;/h3&gt;
&lt;p&gt;一次会话中包含多次请求和响应&lt;/p&gt;
&lt;p&gt;一次会话：浏览器第一次给服务器发送请求，会话建立，指导一方断开为止&lt;/p&gt;
&lt;h3 id=&quot;有什么用&quot;&gt;有什么用&lt;/h3&gt;
&lt;p&gt;在一次会
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>XML</title>
    <link href="http://verge.ink/2020/05/31/XML/"/>
    <id>http://verge.ink/2020/05/31/XML/</id>
    <published>2020-05-31T13:50:17.000Z</published>
    <updated>2020-05-31T14:07:39.692Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是XML">什么是XML</h2><p>XML(Extensible Markup Language)<strong>可扩展</strong>标记语言</p><p>可扩展：标签都是可以自定义的</p><p>语法严格</p><h2 id="啥用">啥用</h2><ol><li>存储数据<ol><li>配置文件</li><li>在网络中传输</li></ol></li></ol><h2 id="基本语法">基本语法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span> version = <span class="string">'1.0'</span> <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span> = <span class="string">'1'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span> = <span class="string">'2'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>第一行必须为版本声明（必须是第一行，第一行是空行都不行）</li><li>有且只能有一个根标签(&lt;users&gt;&lt;/users&gt;)</li><li>属性值必须用 引号引起来（单双都行）</li><li>标签都是成对出现（除首行）</li><li>标签名称区分大小写</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是XML&quot;&gt;什么是XML&lt;/h2&gt;
&lt;p&gt;XML(Extensible Markup Language)&lt;strong&gt;可扩展&lt;/strong&gt;标记语言&lt;/p&gt;
&lt;p&gt;可扩展：标签都是可以自定义的&lt;/p&gt;
&lt;p&gt;语法严格&lt;/p&gt;
&lt;h2 id=&quot;啥用&quot;&gt;啥用&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring</title>
    <link href="http://verge.ink/2020/05/30/Spring/"/>
    <id>http://verge.ink/2020/05/30/Spring/</id>
    <published>2020-05-30T15:38:55.000Z</published>
    <updated>2020-07-17T14:36:09.616Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="IoC-控制反转">IoC(控制反转)</h2><p>将对象的创建交给框架</p><p>目的：降低程序间的耦合</p><h3 id="如何使用">如何使用</h3><ol><li>Maven项目引入一下依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>在项目的src文件下创建bean.xml(可以是任何名称文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置bean标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- bean标签：用于配置让spring创建对象，并且存入ioc容器之中 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- id属性：对象的唯一标识。 class属性：指定要创建对象的全限定类名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"xxx"</span> <span class="attr">class</span>=<span class="string">"com.xxx.xxx.xxx"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">    <span class="comment">//1.使用ApplicationContext接口获取spring容器 </span></span><br><span class="line">    ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"bean.xml"</span>); </span><br><span class="line">    <span class="comment">//2.根据bean的id获取对象 </span></span><br><span class="line">    Object ObjectName = (Object) ac.getBean(<span class="string">"bean.xml里的id"</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="BeanFactory与ApplicationContext">BeanFactory与ApplicationContext</h4><p>BeanFactory是顶层接口</p><p>ApplicationContext是BeanFactory的子接口</p><p>不同：对象的创建时间不同</p><ul><li>BeanFactory 什么时候用什么时候创建</li><li>ApplicationContext默认情况下读取完配置文件之后就创建 （<strong>一般用它</strong>）</li></ul><h4 id="ApplicationContext的实现类">ApplicationContext的实现类</h4><ul><li>ClassPathXmlApplicationContext：<br>它是从类的根路径下加载配置文件 推荐</li><li>FileSystemXmlApplicationContext：<br>它是从磁盘路径上加载配置文件，配置文件可以在磁盘的任意位置。</li><li>AnnotationConfigApplicationContext:<br>当我们使用注解配置容器对象时，需要使用此类来创建spring 容器。它用来读取注解。</li></ul><h4 id="Bean标签">Bean标签</h4><p><strong>属性：</strong></p><ol><li>作用<ol><li>用于配置对象让Spring创建</li><li>默认调用对象的无参构造器构造</li></ol></li><li>属性<ol><li>id:给对象指定唯一标识符</li><li>class：指定对象的全限定类名</li><li>scope：指定对象的作用范围<ol><li>singleton :默认值，单例的.</li><li>prototype :多例的.</li><li>request :WEB项目中,Spring创建一个Bean的对象,将对象存入到request域中.</li><li>session :WEB项目中,Spring创建一个Bean的对象,将对象存入到session域中.</li><li>global session :WEB项目中,应用在Portlet环境.如果没有Portlet环境那么globalSession相当于session.</li></ol></li><li>init-method：指定类中的初始化方法名称</li><li>destroy-method：指定类中销毁方法名称</li></ol></li></ol><h4 id="实例化Bean">实例化Bean</h4><ol><li>使用默认无参构造函数</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"Xxx"</span> <span class="attr">class</span>=<span class="string">"xxx.xxx.xxx.Xxx"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用静态工厂</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactory</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Xxx <span class="title">name</span><span class="params">()</span></span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Xxx(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 此种方式是: 使用StaticFactory类中的静态方法name创建对象，并存入spring容器 </span></span><br><span class="line"><span class="comment">id属性：指定bean的id，用于从容器中获取 </span></span><br><span class="line"><span class="comment">class属性：指定静态工厂的全限定类名 </span></span><br><span class="line"><span class="comment">factory-method属性：指定生产对象的静态方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"xxx"</span> <span class="attr">class</span>=<span class="string">"xxx.xxx.xxx.StaticFactory"</span> <span class="attr">factory-method</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>实例工厂</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InstanceFactory</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Xxx <span class="title">name</span><span class="params">()</span></span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Xxx(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 此种方式是： 先把工厂的创建交给spring来管理。 然后在使用工厂的bean来调用里面的方法 </span></span><br><span class="line"><span class="comment">factory-bean属性：用于指定实例工厂bean的id。 </span></span><br><span class="line"><span class="comment">factory-method属性：用于指定实例工厂中创建对象的方法。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"instancFactory"</span> <span class="attr">class</span>=<span class="string">"xxx.xxx.xxx.InstanceFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span><span class="comment">&lt;!--工厂类--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"xxx"</span> <span class="attr">factory-bean</span>=<span class="string">"instancFactory"</span> <span class="attr">factory-method</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> <span class="comment">&lt;!--工厂中的方法--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="依赖注入">依赖注入</h3><p>理解控制反转和依赖注入：<a href="https://zhuanlan.zhihu.com/p/33492169" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/33492169</a></p><h4 id="构造函数注入">构造函数注入</h4><p>使用类中的构造函数，给成员变量赋值</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">constructor-arg :</span></span><br><span class="line"><span class="comment">属性：</span></span><br><span class="line"><span class="comment">index:指定参数在构造函数参数列表的索引位置，从0开始</span></span><br><span class="line"><span class="comment">type:指定参数在构造函数中的数据类型</span></span><br><span class="line"><span class="comment">name:指定参数在构造函数中的名称</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">value:它能赋的值是基本数据类型和String类型</span></span><br><span class="line"><span class="comment">ref:它能赋的值是其他bean类型，也就是说，必须得是在配置文件中配置过的bean</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"18"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"birthday"</span> <span class="attr">ref</span>=<span class="string">"now"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"now"</span> <span class="attr">class</span>=<span class="string">"java.util.Date"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="set方法注入">set方法注入</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 通过配置文件给bean中的属性传值：使用set方法的方式 (常用)</span></span><br><span class="line"><span class="comment">property</span></span><br><span class="line"><span class="comment">属性： </span></span><br><span class="line"><span class="comment">name：找的是类中set方法后面的部分 </span></span><br><span class="line"><span class="comment">ref：给属性赋值是其他bean类型的 </span></span><br><span class="line"><span class="comment">value：给属性赋值是基本数据类型和string类型的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"21"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"birthday"</span> <span class="attr">ref</span>=<span class="string">"now"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"now"</span> <span class="attr">class</span>=<span class="string">"java.util.Date"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注入集合属性">注入集合属性</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在注入集合数据时，只要结构相同，标签可以互换 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 给数组注入数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myStrs"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注入 list 集合数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myList"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注入 set 集合数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mySet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注入 Map 数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myMap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"testA"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"testB"</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注入 properties 数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myProps"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"testA"</span> <span class="attr">value</span>=<span class="string">"aaa"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"testB"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AOP">AOP</h2><h2 id="注解">注解</h2><h3 id="创建对象">创建对象</h3><p>@Component</p><p>​用于把当前类对象存入Spring容器种，相当于配置文件里的&lt;bean&gt;&lt;/bean&gt;</p><p>这个注解有一个属性value用于指定bean的id，默认值为当前类名，首字母小写</p><p>@Controller @Service @Repository  这三个注解的作用和属性与@Component相同，只是提供了更加明确的语义化</p><h3 id="注入数据">注入数据</h3><p>相当于&lt;property name=&quot;&quot; ref=&quot;&quot;&gt;</p><p><strong>@AutoWired</strong> 自动按照类型注入</p><p>使用注解注入属性时， set 方法可以省略</p><p>当有多个类型匹配时，使用要注入的对象变量名称作为 bean 的 id，在 spring 容器查找</p><p><strong>@Qualifier</strong>  在自动按照类型注入的基础之上，再按照 Bean 的 id 注入。</p><p>给字段注入时不能独立使用，必须和@Autowire 一起使用;给方法参数注入时，可以独立使用。</p><p>属性：value，bean 的id</p><p><strong>@Resource</strong>  直接按照 Bean 的 id 注入</p><p>属性：value，bean 的id</p><p><strong>@Value</strong>  注入基本数据类型和 String 类型数据的</p><p>value：用于指定值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;IoC-控制反转&quot;&gt;IoC(控制反转)&lt;/h2&gt;
&lt;p&gt;将对象的创建交给框架&lt;/p&gt;
&lt;p&gt;目的：降低程序间的耦合&lt;/p&gt;
&lt;h3 id=&quot;如何使用&quot;&gt;如何使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Maven项目引入一下依赖&lt;/li&gt;
&lt;/ol&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JDBC学习笔记</title>
    <link href="http://verge.ink/2020/05/30/JDBC/"/>
    <id>http://verge.ink/2020/05/30/JDBC/</id>
    <published>2020-05-29T17:04:43.000Z</published>
    <updated>2020-07-17T14:35:42.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JDBC是啥">JDBC是啥</h3><p>JDBC(Java DataBase connectivity)(Java 数据库连接)</p><p>由SUN公司定义的一系列操作关系型数据库的接口，后由数据库厂商对接口进行实现，提供数据库驱动jar包</p><h2 id="使用">使用</h2><h3 id="导入jar包">导入jar包</h3><h3 id="加载驱动">加载驱动</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//把com.mysql.jdbc.Driver这个字节码文件加载到内存里</span></span><br></pre></td></tr></table></figure><h3 id="连接数据库">连接数据库</h3><p><code>host = jdbc:mysql://host /db</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connection conn = DriverManager.getConnection(host,username,passwd);</span><br></pre></td></tr></table></figure><p>连接时发现报错</p><blockquote><p>The server time zone value ‘�й���׼ʱ��’ is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.</p></blockquote><p>解决方法</p><p>host后加上<code>?serverTimezone=UTC</code></p><h2 id="对象详解">对象详解</h2><ol><li>DriverManage驱动管理<ul><li>注册驱动<ul><li>MySQL5以后可以自动注册</li></ul></li><li>获取数据库连接<ul><li>static getConnection(String url,String user,String password)</li><li>url = jdbc:mysql://ip地址:端口号/数据库名</li></ul></li></ul></li><li>Connection数据库连接对象<ol><li>获取执行sql语句的对象<ul><li>Statement CreateStatement(String sql)</li><li>Prestatement prepareStatement(String sql)</li></ul></li><li>管理事务</li></ol></li><li>Statement执行sql语句<ol><li>执行sql<ol><li>int executeUpdate(String sql)：执行DML(insert,update,delete)，DDL(create,alter,drop)<ul><li>返回值是操作后影响的行数</li><li>可以用来判断成功与否</li></ul></li><li>ResultSet executeQuery(String sql):执行DQL(select)</li></ol></li></ol></li><li>ResultSet查询结果的封装<ul><li>boolean next()游标向下移动一行(默认指向表头)，判断是否有数据</li><li>getXxx(“列名/列的编号，从1开始”)获取数据Xxx代表类型</li></ul></li><li>PreparedStatement<ol><li>SQL注入问题:在拼接sql‘语句时，有一些特殊的词参与拼接会造成安全问题</li><li>使用PreparedStatem对象解决问题<ol><li>定义sql语句时使用<code>?</code>作为占位符，替换参数</li><li>使用setXxx(？的编号从1开始，参数的值)</li><li>执行sql语句时不再需要传参</li></ol></li></ol></li></ol><h2 id="Spring-JDBC">Spring JDBC</h2><p>Spring框架提供的JDBC简单封装</p><p>提供一个JDBCTemplate</p><h3 id="使用-2">使用</h3><ol><li>导入jar包</li><li>创建JdbcTemplate，依赖于DataSource<ol><li>JdbcTemplate template = new JdbcTemplate</li></ol></li><li>调用JdbcTemplate的方法完成CRUD操作<ol><li>update()增删改</li><li>queryForMap()将查询结果封装为map集合</li><li>queryForList()将查询结果封装为list集合</li><li>query()查询结果，将查询结果封装为JavaBean对象</li><li>queryForObject()将查询结果封装为对象</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JDBC是啥&quot;&gt;JDBC是啥&lt;/h3&gt;
&lt;p&gt;JDBC(Java DataBase connectivity)(Java 数据库连接)&lt;/p&gt;
&lt;p&gt;由SUN公司定义的一系列操作关系型数据库的接口，后由数据库厂商对接口进行实现，提供数据库驱动jar包&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
